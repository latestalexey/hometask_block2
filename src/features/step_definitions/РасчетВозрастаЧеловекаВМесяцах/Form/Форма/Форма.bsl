//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЕстьЧеловекИвановРодившийся(Парам01)","ЕстьЧеловекИвановРодившийся","Допустим есть человек Иванов родившийся 12.01.1989");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"РезультатБудет(Парам01)","РезультатБудет","Тогда результат будет 331");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Допустим есть человек Иванов родившийся 12.01.1989
//@ЕстьЧеловекИвановРодившийся(Парам01)
Процедура ЕстьЧеловекИвановРодившийся(ДатаРождения) Экспорт
	
	Контекст.Вставить("ДатаРождения", ДатаРождения);
	
КонецПроцедуры

&НаКлиенте
//Тогда результат будет 331
//@РезультатБудет(Парам01)
Процедура РезультатБудет(ОжидаемыйВозрастВМесяцах) Экспорт
	
	ВозрастВМесяцах = ОбщийМодуль1.РасчетВозрастаЧеловекаВМесяцах(Контекст.ДатаРождения);
	
	Если НЕ ОжидаемыйВозрастВМесяцах = ВозрастВМесяцах Тогда
	
		ВызватьИсключение "Расчет возраста неверен.";	
	
	КонецЕсли; 
	
КонецПроцедуры

//окончание текста модуля